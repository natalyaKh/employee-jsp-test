/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-08-12 20:15:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class j_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("$('.employeesTable').DataTable({\n");
      out.write("searching: false,\n");
      out.write("ordering: false,\n");
      out.write("lengthMenu: [ [4, 8, 12, -1], [4, 8, 12, \"All\"] ]\n");
      out.write("});\n");
      out.write("\n");
      out.write("function deleteEmployee(id) {\n");
      out.write("  $.ajax({\n");
      out.write("    url: '/employee/' + id,\n");
      out.write("    type: 'DELETE',\n");
      out.write("    async: true,\n");
      out.write("    success: function (resp) {\n");
      out.write("      console.log(resp + \" deleted\")\n");
      out.write("    },\n");
      out.write("    error: function (resp) {\n");
      out.write("      var error = JSON.parse(resp.responseText);\n");
      out.write("      console.log(error.error)\n");
      out.write("      alert(error.error)\n");
      out.write("    }\n");
      out.write("  })\n");
      out.write("}\n");
      out.write("\n");
      out.write("$.ajax({\n");
      out.write("  url: 'https://jsonip.com/',\n");
      out.write("  type: 'GET',\n");
      out.write("  success: function (resp) {\n");
      out.write("    var outputText = 'ip: ' + resp.ip;\n");
      out.write("    console.log(resp.ip + \" ip\")\n");
      out.write("    $('#ip').append(outputText);\n");
      out.write("  }\n");
      out.write("})\n");
      out.write("\n");
      out.write("$.ajax({\n");
      out.write("  type: \"OPTIONS\", url: \"/\", complete: function (x) {\n");
      out.write("    console.log(x.getResponseHeader(\"Date\"));\n");
      out.write("  }\n");
      out.write("})\n");
      out.write("\n");
      out.write("$(document).ready(function () {\n");
      out.write("  var timeDifference;\n");
      out.write("\n");
      out.write("  window.onload = function () {\n");
      out.write("    console.log($('#timer').text());\n");
      out.write("    var t = $('#timer').text();\n");
      out.write("    console.log(t);\n");
      out.write("    console.log((Date.parse(t)) + \"  1\")\n");
      out.write("    console.log(new Date().getTime()  + \" 2\")\n");
      out.write("    console.log(new Date(t).getTime() + \" 3\")\n");
      out.write("    // timeDifference = new Date().getTime() - new Date(response).getTime();\n");
      out.write("    timeDifference = new Date().getTime() - new Date(t).getTime();\n");
      out.write("    console.log(timeDifference);\n");
      out.write("    // $('#timer').textContent;\n");
      out.write("    getdate();\n");
      out.write("  }\n");
      out.write("  // }\n");
      out.write("  // });\n");
      out.write("\n");
      out.write("  function setFirstZero(value) {\n");
      out.write("    if (value < 10) {\n");
      out.write("      value = \"0\" + value;\n");
      out.write("    }\n");
      out.write("    return value;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  function getdate() {\n");
      out.write("    var servertime = new Date();\n");
      out.write("    servertime.setMilliseconds(servertime.getMilliseconds() - timeDifference);\n");
      out.write("    var day = setFirstZero(servertime.getDate());\n");
      out.write("    var month = setFirstZero(servertime.getMonth() + 1);\n");
      out.write("    var year = servertime.getFullYear();\n");
      out.write("    var hours = setFirstZero(servertime.getHours());\n");
      out.write("    var minutes = setFirstZero(servertime.getMinutes());\n");
      out.write("    var seconds = setFirstZero(servertime.getSeconds());\n");
      out.write("    console.log(seconds + \" sec\")\n");
      out.write("    $(\"#timer\").text(day + \"/\" + month + \"/\" + year + \" \" + hours + \" : \" + minutes + \" : \" + seconds);\n");
      out.write("    setTimeout(function () {\n");
      out.write("      getdate()\n");
      out.write("    }, 500);\n");
      out.write("  }\n");
      out.write("})\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
